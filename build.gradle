buildscript {
    repositories {
        mavenCentral()
        maven { url "http://files.minecraftforge.net/maven" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

version = project.mod_version
group = "msifeed.mc.more"
archivesBaseName = "more"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8
idea { module { inheritOutputDirs = true } }

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"

    replaceIn "Bootstrap.java"
    replace "@VERSION@", project.version

    srgExtra "PK: com/zaxxer/HikariCP com/zaxxer/HikariCP"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    embed
    compile.extendsFrom embed
}

dependencies {
    runtime 'mysql:mysql-connector-java:5.1.14'
    embed 'com.zaxxer:HikariCP:3.3.1'
    embed 'org.mongodb:mongodb-driver-sync:4.2.2'

    testCompile 'junit:junit:4.12'
}

jar {
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest {
        attributes 'FMLCorePlugin': 'msifeed.mc.core.MoreCorePlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task copyLatestJar(type: Copy) {
    from jar
    into 'build/libs'
    rename { String fileName -> return archivesBaseName + '-latest.jar' }
}

build.dependsOn copyLatestJar